version: '3.8'

services:
  # Node.js User Service
  user-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: user-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    networks:
      - app-network
    volumes:
      - ./logs:/app/logs

  # NGINX as reverse proxy and load balancer
  nginx:
    image: nginx:1.25-alpine
    container_name: user-service-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - user-service
    networks:
      - app-network

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: user-service-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis-data: 